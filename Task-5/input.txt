Query objects are composable, meaning that you can return a query from a method.
 Objects that represent queries don't store the resulting collection,
  but rather the steps to produce the results when needed.
   The advantage of returning query objects from methods is that they can be further composed or modified. 
   Therefore any return value or out parameter of a method that returns a query must also have that type. 
   If a method materializes a query into a concrete List<T> or Array type, it returns the query results instead of the query itself.
    A query variable that is returned from a method can still be composed or modified.

In the following example, the first method QueryMethod1 returns a query as a return value, 
and the second method QueryMethod2 returns a query as an out parameter (returnQ in the example).
 In both cases, it's a query that is returned, not query results.